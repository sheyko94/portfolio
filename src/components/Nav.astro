---
import Icon from "./Icon.astro";
import type { iconPaths } from "./IconPaths";

const iconLinks: Array<{
	label: string;
	href: string;
	icon: keyof typeof iconPaths;
}> = [
	{
		label: "LinkedIn",
		href: "https://www.linkedin.com/in/ivan-gonzalez-cabral/",
		icon: "linkedin-logo",
	},
	{
		label: "Gmail",
		href: "mailto:ivangonzalezcabral94@gmail.com",
		icon: "envelope",
	},
	{
		label: "CV",
		href: "/cv.pdf", // point directly to the PDF
		icon: "download",
	},
];
---

<nav>
	<div class="menu-header">
		<div class="socials">
			{
				iconLinks.map(({ href, icon, label }) =>
					label === "CV" ? (
						<a
							href={href}
							class="social cv-link"
							download="cv.pdf"
							type="application/pdf"
						>
							<Icon icon={icon} />
							<span class="cv-label">CV</span>
						</a>
					) : (
						<a
							href={href}
							class="social"
							target="_blank"
							rel="noopener noreferrer"
						>
							<Icon icon={icon} />
							<span class="sr-only">{label}</span>
						</a>
					),
				)
			}
		</div>
	</div>
</nav>

<script>
	class MenuButton extends HTMLElement {
		constructor() {
			super();

			// Inject menu toggle button when JS runs.
			this.appendChild(
				this.querySelector("template")!.content.cloneNode(true),
			);
			const btn = this.querySelector("button")!;

			// Hide menu (shown by default to support no-JS browsers).
			const menu = document.getElementById("menu-content")!;
			menu.hidden = true;
			menu.classList.add("menu-content");

			const setExpanded = (expand) => {
				btn.setAttribute("aria-expanded", expand ? "true" : "false");
				menu.hidden = !expand;
			};

			btn.addEventListener("click", () => setExpanded(menu.hidden));

			const handleViewports = (e) => {
				setExpanded(e.matches);
				btn.hidden = e.matches;
			};
			const mediaQueries = window.matchMedia("(min-width: 50em)");
			handleViewports(mediaQueries);
			mediaQueries.addEventListener("change", handleViewports);
		}
	}
	customElements.define("menu-button", MenuButton);
</script>
