---
import { getCollection } from "astro:content";
// Component Imports
import CallToAction from "../components/CallToAction.astro";
// Page section components
// import ContactCTA from "../components/ContactCTA.astro";
import Grid from "../components/Grid.astro";
import Hero from "../components/Hero.astro";
import Icon from "../components/Icon.astro";
import Pill from "../components/Pill.astro";
import PortfolioPreview from "../components/PortfolioPreview.astro";
import Skills from "../components/Skills.astro";
// Layout import — provides basic page elements: <head>, <nav>, <footer> etc.
import BaseLayout from "../layouts/BaseLayout.astro";

// Content Fetching: List four most recent work projects
const projects = (await getCollection("work"))
	.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
	.slice(0, 4);
---

<BaseLayout>
	<div class="stack gap-20 lg:gap-48">
		<div class="wrapper stack gap-8 lg:gap-20">
			<header class="hero">
				<Hero
					title="Hello, my name is Ivan Gonzalez"
					tagline="I am a Lead Engineer specializing in backend, devops, and platform engineering."
					align="start"
				>
					<div class="roles">
						<Pill><Icon icon="code" size="1.33em" />Backend</Pill>
						<Pill><Icon icon="server" size="1.33em" />DevOps</Pill>
						<Pill
							><Icon icon="rocket-launch" size="1.33em" />Platform
							Engineering</Pill
						>
					</div>
				</Hero>

				<img
					alt="Ivan Gonzalez Cabral professional portrait"
					width="336"
					height="434"
					src="/assets/portrait.jpeg"
				/>
			</header>

			<Skills />
		</div>

		<main class="wrapper stack gap-20 lg:gap-48">
			<section class="section with-background bg-variant">
				<header class="section-header stack gap-2 lg:gap-4">
					<h3>Project Highlights</h3>
					<p>
						Impact-led projects pulled from my roles — focused on
						measurable outcomes and platform reliability.
					</p>
				</header>

				<div class="gallery">
					<Grid variant="small">
						<!-- iptiQ -->
						<li class="project-card">
							<h4>Ephemeral Test Environments</h4>
							<p class="project-meta">
								iptiQ (Swiss Re) · AWS · Kubernetes/Helm ·
								GitLab CI
							</p>
							<p>
								Cut E2E testing costs from ~€6,000 to
								~€350/month and reduced cycle time from ~4h to
								~40m with automated, on-demand K8s environments.
							</p>
						</li>
						<li class="project-card">
							<h4>Platform Engineering Enablement</h4>
							<p class="project-meta">
								iptiQ (Swiss Re) · DevEx · CI/CD · Standards
							</p>
							<p>
								Established DevEx/DevOps practices and
								standardized pipelines with GitLab CI + Helm to
								speed delivery and slash onboarding time.
							</p>
						</li>
						<li class="project-card">
							<h4>Distributed Core Platform</h4>
							<p class="project-meta">
								iptiQ (Swiss Re) · Java Spring Boot · Kafka ·
								DDD/Hexagonal
							</p>
							<p>
								Contributed to a scalable services platform
								using Kafka and DDD/Hexagonal patterns to
								support insurance back-office workloads.
							</p>
						</li>

						<!-- FinanceFair -->
						<li class="project-card">
							<h4>Double-Entry Accounting Engine</h4>
							<p class="project-meta">
								FinanceFair · Java Spring Boot · PostgreSQL ·
								AWS
							</p>
							<p>
								Designed and delivered a banking-grade ledger
								with strict double-entry bookkeeping for
								financial operations.
							</p>
						</li>
						<li class="project-card">
							<h4>Auction & Trading System</h4>
							<p class="project-meta">
								FinanceFair · Java Spring Boot · Kafka
							</p>
							<p>
								Built daily auctions for loan trading and
								bidding, integrated with the platform’s core
								finance services.
							</p>
						</li>
						<li class="project-card">
							<h4>CI/CD & Cloud Migration</h4>
							<p class="project-meta">
								FinanceFair · Azure → AWS · GitHub Actions
							</p>
							<p>
								Migrated platform to AWS and modernized CI/CD by
								replacing Jenkins with GitHub Actions.
							</p>
						</li>

						<!-- arte -->
						<li class="project-card">
							<h4>Construction Projects Portal</h4>
							<p class="project-meta">
								arte · Java · AWS · SQL · Docker
							</p>
							<p>
								Led development of a public portal for the
								Canary Islands Government to showcase active
								construction projects.
							</p>
						</li>
						<li class="project-card">
							<h4>Kafka Infrastructure</h4>
							<p class="project-meta">arte · Apache Kafka</p>
							<p>
								Delivered the company’s first Kafka
								infrastructure to support streaming data
								pipelines across services.
							</p>
						</li>
					</Grid>
				</div>
			</section>

			<section class="section with-background bg-variant">
				<header class="section-header stack gap-2 lg:gap-4">
					<h3>Mentions</h3>
					<p>
						I have been fortunate enough to receive praise for my
						work in several publications. Take a look below to learn
						more.
					</p>
				</header>

				<div class="gallery">
					<Grid variant="small">
						{
							[
								"Medium",
								"BuzzFeed",
								"The Next Web",
								"awwwards.",
								"TechCrunch",
							].map((brand) => (
								<li class="mention-card">
									<p>{brand}</p>
								</li>
							))
						}
					</Grid>
				</div>
			</section>
		</main>

		<!-- ContactCTA removed -->
	</div>
</BaseLayout>

<style>
	.hero {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 2rem;
	}

	.roles {
		display: none;
	}

	.hero img {
		aspect-ratio: 1 / 1;
		object-fit: cover;
		object-position: top;
		border-radius: 50%;
		box-shadow: var(--shadow-md);
		width: 200px;
		height: 200px;
		max-width: 40vw;
	}

	@media (min-width: 50em) {
		.hero {
			display: grid;
			grid-template-columns: 6fr 4fr;
			padding-inline: 2.5rem;
			gap: 3.75rem;
		}

		.roles {
			margin-top: 0.5rem;
			display: flex;
			gap: 0.5rem;
		}

		.hero img {
			aspect-ratio: 1 / 1;
			border-radius: 50%;
			object-fit: cover;
			width: 220px;
			height: 220px;
			max-width: 22vw;
		}
	}

	/* ====================================================== */

	.section {
		display: grid;
		gap: 2rem;
	}

	.with-background {
		position: relative;
	}

	.with-background::before {
		--hero-bg: var(--bg-image-subtle-2);

		content: "";
		position: absolute;
		pointer-events: none;
		left: 50%;
		width: 100vw;
		aspect-ratio: calc(2.25 / var(--bg-scale));
		top: 0;
		transform: translateY(-75%) translateX(-50%);
		background:
			url("/assets/backgrounds/noise.png") top center/220px repeat,
			var(--hero-bg) center center / var(--bg-gradient-size) no-repeat,
			var(--gray-999);
		background-blend-mode: overlay, normal, normal, normal;
		mix-blend-mode: var(--bg-blend-mode);
		z-index: -1;
	}

	.with-background.bg-variant::before {
		--hero-bg: var(--bg-image-subtle-1);
	}

	.section-header {
		justify-self: center;
		text-align: center;
		max-width: 50ch;
		font-size: var(--text-md);
		color: var(--gray-300);
	}

	.section-header h3 {
		font-size: var(--text-2xl);
	}

	@media (min-width: 50em) {
		.section {
			grid-template-columns: repeat(4, 1fr);
			grid-template-areas:
				"header header header header"
				"gallery gallery gallery gallery";
			gap: 5rem;
		}

		.section.with-cta {
			grid-template-areas:
				"header header header cta"
				"gallery gallery gallery gallery";
		}

		.section-header {
			grid-area: header;
			font-size: var(--text-lg);
		}

		.section-header h3 {
			font-size: var(--text-4xl);
		}

		.with-cta .section-header {
			justify-self: flex-start;
			text-align: left;
		}

		.gallery {
			grid-area: gallery;
		}

		.cta {
			grid-area: cta;
		}
	}

	/* ====================================================== */

	.project-card {
		display: grid;
		gap: 0.35rem;
		padding: 1rem;
		border: 1px solid var(--gray-800);
		border-radius: 1rem;
		background: var(--gradient-subtle);
		box-shadow: var(--shadow-sm);
		color: var(--gray-200);
	}

	.project-card h4 {
		margin: 0;
		font-size: var(--text-lg);
		color: var(--gray-0);
	}

	.project-meta {
		margin: 0;
		font-size: var(--text-sm);
		color: var(--gray-400);
	}

	.mention-card {
		display: flex;
		height: 7rem;
		justify-content: center;
		align-items: center;
		text-align: center;
		border: 1px solid var(--gray-800);
		border-radius: 1.5rem;
		color: var(--gray-300);
		background: var(--gradient-subtle);
		box-shadow: var(--shadow-sm);
	}

	@media (min-width: 50em) {
		.mention-card {
			border-radius: 1.5rem;
			height: 9.5rem;
		}
	}
</style>
